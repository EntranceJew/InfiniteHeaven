--InfHostage.lua WIP DEBUGWIP
local this={}

--LOCALOPT
local InfMain=InfMain
local NULL_ID=GameObject.NULL_ID
local GetGameObjectId=GameObject.GetGameObjectId
local SendCommand=GameObject.SendCommand

this.debugModule=false

this.numHostages=9--4--SYNC num locators--DEBUGWIP

this.hostageNames={}

this.packages={
  afgh={
    "/Assets/tpp/pack/mission2/ih/ih_hostage_prs3.fpk",
    "/Assets/tpp/pack/mission2/ih/ih_hostage_loc.fpk",
  },
  mafr={
    "/Assets/tpp/pack/mission2/common/mis_com_mafr_hostage_woman.fpk",
    "/Assets/tpp/pack/mission2/ih/ih_hostage_prs6_def.fpk",
    "/Assets/tpp/pack/mission2/ih/ih_hostage_loc.fpk",
  }
}

function this.PostAllModulesLoad()
  this.hostageNames=InfLookup.GenerateNameList("ih_hostage_%04d",this.numHostages)
end

function this.AddMissionPacks(missionCode,packPaths)
  --DEBUGWIP
  if missionCode==30050 then

    local packs={
    
      --      --packPaths[#packPaths+1]="/Assets/tpp/pack/mission2/ih/s10115_area.fpk",
      --      "/Assets/tpp/pack/mission2/common/mis_com_dd_soldier_gz.fpk",
      --
      --      --"/Assets/tpp/pack/mission2/ih/s10280_d14.fpk",
      --      --"/Assets/tpp/pack/mission2/ih/s10010_s03.fpk",
      --
      --"/Assets/tpp/pack/mission2/ih/f30050_paz.fpk",
      
      
  
      --
      --      "/Assets/tpp/pack/mission2/common/mis_com_nurse.fpk",
      --
      --      "/Assets/tpp/pack/mission2/ih/ih_doctor.fpk",
      --      "/Assets/tpp/pack/mission2/ih/ih_ddr.fpk",
      --      "/Assets/tpp/pack/mission2/ih/ih_dds4.fpk",
      --      "/Assets/tpp/pack/mission2/ih/ih_dds1.fpk",
      --      "/Assets/tpp/pack/mission2/ih/ih_dds9.fpk",
      --      "/Assets/tpp/pack/mission2/ih/ih_hostage2mob.fpk",
      --"/Assets/tpp/pack/mission2/ih/ih_hostage2mob_10def.fpk",
      --"/Assets/tpp/pack/mission2/ih/ih_hostage2_9def.fpk",

      --"/Assets/tpp/pack/mission2/common/mis_com_mafr_hostage_woman.fpk",
      
      
      
--          "/Assets/tpp/pack/mission2/common/mis_com_afgh_hostage.fpk",
--      "/Assets/tpp/pack/mission2/ih/ih_ptn.fpk",
--      "/Assets/tpp/pack/mission2/ih/ih_hostage_prs6_def.fpk",
--      "/Assets/tpp/pack/mission2/ih/ih_hostage_loc.fpk",


--    "/Assets/tpp/pack/mission2/common/mis_com_mafr_hostage_woman.fpk",
--    "/Assets/tpp/pack/mission2/ih/ih_hostage_prs6_def.fpk",
--    "/Assets/tpp/pack/mission2/ih/ih_gns0.fpk",
--    "/Assets/tpp/pack/mission2/ih/ih_hostage_loc.fpk",

    }
    for i,packName in ipairs(packs) do
      packPaths[#packPaths+1]=packName
    end


    --DEBUGWIP
    if TppHostage2.SetHostageType then
    --    TppHostage2.SetHostageType{gameObjectType="TppHostageUnique",hostageType="Volgin"}
    --    TppHostage2.SetHostageType{gameObjectType="TppHostage2",hostageType="Parasite"}
    --TppHostage2.SetHostageType{gameObjectType="TppHostage2",hostageType="NoStand"}
    --TppHostage2.SetHostageType{gameObjectType="TppHostage2",hostageType="Mob"}
    end
    if TppHostage2.SetUniquePartsPath then
      InfCore.Log"----------------blehh"--DEBUGWIP
      local uniquePartsPath={
        ih_hostage_0000="/Assets/tpp/parts/chara/ptn/ptn0_main0_def_v00_prs.parts",
        ih_hostage_0001="/Assets/tpp/parts/chara/ptn/ptn0_main0_def_v00_prs.parts",
        ih_hostage_0002="/Assets/tpp/parts/chara/ptn/ptn0_main0_def_v00_prs.parts",
        ih_hostage_0003="/Assets/tpp/parts/chara/ptn/ptn0_main0_def_v00_prs.parts",

      --        ih_hostage_0000="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",
      --        ih_hostage_0001="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",
      --        ih_hostage_0002="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",
      --        ih_hostage_0003="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",

      --        ih_hostage_0004="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --        ih_hostage_0005="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --        ih_hostage_0006="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --        ih_hostage_0007="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",


      --ptn_p21_010410_0000="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",
      --        --ptn_p21_010410_0001="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --        ptn_p21_010410_0002="/Assets/tpp/parts/chara/dds/dds4_main0_def_v00_ih.parts",
      --        --ptn_p21_010410_0003="/Assets/tpp/parts/chara/dds/dds1_main0_def_v00.parts",
      --        --ptn_p21_010410_0003="/Assets/tpp/parts/chara/dds/dds1_main0_def_v00_ih.parts",
      --        ptn_p21_010410_0003="/Assets/tpp/parts/chara/dds/dds9_main0_def_v00_ih.parts",
      --        --ptn_p21_010410_0004="/Assets/tpp/parts/chara/ptn/ptn0_main0_def_v00.parts",
      --        --ptn_p21_010410_0005="/Assets/tpp/parts/chara/prs/prs3_main0_def_v00.parts",
      --ptn_p21_010410_0004="/Assets/tpp/parts/chara/dct/dct0_main0_def_v00.parts",
      -- ptn_p21_010410_0005="/Assets/tpp/parts/chara/dct/dct0_main0_def_v00.parts",
      --ptn_p21_010410_0006="/Assets/tpp/parts/chara/dct/dct1_main0_def_v00.parts",
      -- ptn_p21_010410_0007="/Assets/tpp/parts/chara/dct/dct2_main0_def_v00.parts",
      --      --ptn_p21_010410_0005="/Assets/tpp/parts/chara/nrs/nrs3_main0_def_v00.parts",


      --ptn_p21_010410_0008="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --ptn_p21_010410_0009="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --ptn_p21_010410_0010="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --ptn_p21_010410_0011="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --ptn_p21_010410_0012="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      --ptn_p21_010410_0013="/Assets/tpp/parts/chara/dds/ddr1_main0_def_v00.parts",
      }
      for locatorName,parts in pairs(uniquePartsPath)do
        --TppHostage2.SetUniquePartsPath{gameObjectType="TppHostage2",locatorName=locatorName,parts=parts}
      end
    end

  end




  --

  if not Ivars.enableWildCardHostageFREE:EnabledForMission() then
    return
  end

  local locationName=InfUtil.GetLocationName()
  for i,packpath in ipairs(this.packages[locationName])do
    packPaths[#packPaths+1]=packpath
  end
end

function this.PreMissionLoad(missionCode,currentMissionId)
  --DEBUGWIP
  if missionCode==30050 then
    --    local bodies={TppEnemyBodyId.ddr0_main0_v00}
    --   TppSoldierFace.OverwriteMissionFovaData{body=bodies,additionalMode=true}

    --TppSoldierFace.SetBodyFovaUserType{hostage={TppEnemyBodyId.ddr0_main0_v00}}
    --TppHostage2.SetDefaultBodyFovaId{parts="/Assets/tpp/parts/chara/dds/ddr0_main0_def_v00.parts",bodyId=TppEnemyBodyId.ddr0_main0_v00}

    --    ddr0_main0_v00=146,
    --  ddr0_main0_v01=147,
    --  ddr0_main0_v02=148,

    --  ddr0_main1_v00=149,
    --  ddr0_main1_v01=150,
    --  ddr0_main1_v02=151,
    --  ddr0_main1_v03=152,
    --  ddr0_main1_v04=153,

    --  ddr1_main0_v00=154,
    --  ddr1_main0_v01=155,
    --  ddr1_main0_v02=156,
    --  ddr1_main1_v00=157,
    --  ddr1_main1_v01=158,
    --  ddr1_main1_v02=159,

    --ptn patients 300 303 ok
    --304 334 ? even though the fv2s are in the same fpk, missing some fmdls?

    local settings={
      {type="hostage",name="ih_hostage_0000",bodyId=300},
      {type="hostage",name="ih_hostage_0001",bodyId=301},
      {type="hostage",name="ih_hostage_0002",bodyId=302},
      {type="hostage",name="ih_hostage_0003",bodyId=303},
    }
    TppEneFova.AddUniqueSettingPackage(settings)

    local settings={
      --      {type="hostage",name="ih_hostage_0000",faceId="male"},
      --      {type="hostage",name="ih_hostage_0001",faceId="male"},
      --      {type="hostage",name="ih_hostage_0002",faceId="male"},
      --      {type="hostage",name="ih_hostage_0003",faceId="male"},
      --
      --      {type="hostage",name="ih_hostage_0004",faceId="female"},
      --      {type="hostage",name="ih_hostage_0005",faceId="female"},
      --      {type="hostage",name="ih_hostage_0006",faceId="female"},
      --      {type="hostage",name="ih_hostage_0008",faceId="female"},

      --      {type="hostage",name="ptn_p21_010410_0004",faceId=82,bodyId=348},
      --      {type="hostage",name="ptn_p21_010410_0005",faceId=2,bodyId=349},


      --      {type="hostage",name="ptn_p21_010410_0000",faceId=82,bodyId=146},
      --      {type="hostage",name="ptn_p21_010410_0001",faceId=2,bodyId=147},
      --      {type="hostage",name="ptn_p21_010410_0002",faceId=88,bodyId=148},
      --      {type="hostage",name="ptn_p21_010410_0003",faceId=93,bodyId=149},
      --      {type="hostage",name="ptn_p21_010410_0004",faceId=93,bodyId=150},
      --      {type="hostage",name="ptn_p21_010410_0005",faceId=93,bodyId=151},
      --      {type="hostage",name="ptn_p21_010410_0006",faceId=93,bodyId=152},
      --      {type="hostage",name="ptn_p21_010410_0007",faceId=93,bodyId=153},
      --
      --      {type="hostage",name="ptn_p21_010410_0008",faceId="female",bodyId=154},
      --      {type="hostage",name="ptn_p21_010410_0009",faceId="female",bodyId=155},
      --      {type="hostage",name="ptn_p21_010410_0010",faceId="female",bodyId=156},
      --      {type="hostage",name="ptn_p21_010410_0011",faceId="female",bodyId=157},
      --      {type="hostage",name="ptn_p21_010410_0012",faceId="female",bodyId=158},
      --      {type="hostage",name="ptn_p21_010410_0013",faceId="female",bodyId=159},


      --{type="hostage",name="ptn_p21_010410_0005",bodyId=TppEnemyBodyId.dct0_v01},--,bodyId=TppEnemyBodyId.ddr0_main1_v02},
      --{type="hostage",name="ptn_p21_010410_0006",faceId=108},--,bodyId=TppEnemyBodyId.ddr0_main1_v03},
      --{type="hostage",name="ptn_p21_010410_0007",faceId=128},--,bodyId=TppEnemyBodyId.ddr0_main1_v04},
      --    {type="hostage",name="ptn_p21_010410_0008",faceId="male",bodyId=TppEnemyBodyId.ddr0_main0_v00},
      --    {type="hostage",name="ptn_p21_010410_0009",faceId="male",bodyId=TppEnemyBodyId.ddr0_main0_v00},
      --    {type="hostage",name="ptn_p21_010410_0010",faceId="male",bodyId=TppEnemyBodyId.ddr0_main0_v00},
      }
    --TppEneFova.AddUniqueSettingPackage(settings)


  end--DEBUGWIP

  if not Ivars.enableWildCardHostageFREE:EnabledForMission(missionCode) then
    return
  end

  local settings={
    {type="hostage",name="ih_hostage_0000",faceId="female"},
    {type="hostage",name="ih_hostage_0001",faceId="female"},
    {type="hostage",name="ih_hostage_0002",faceId="female"},
    {type="hostage",name="ih_hostage_0003",faceId="female"},
  }
  TppEneFova.AddUniqueSettingPackage(settings)
end

function this.SetUpEnemy(missionTable)
  if not Ivars.enableWildCardHostageFREE:EnabledForMission() then
    return
  end

  InfMain.RandomSetToLevelSeed()

  --  TppHostage2.SetHostageType{
  --    gameObjectType="TppHostage2",
  --    hostageType="NoStand",
  --  }

  for i,hostageName in ipairs(this.hostageNames)do
    local hostageId=GetGameObjectId(hostageName)
    if hostageId==NULL_ID then
    else
      InfNPC.RegenerateStaffParams(hostageId)

      local voices={
        "hostage_a",
        "hostage_b",
        "hostage_c",
        "hostage_d",
      }
      local rndVoice=voices[math.random(#voices)]
      GameObject.SendCommand(hostageId,{id="SetVoiceType",voiceType=rndVoice})
      --REF
      --"pashto"
      --          local defaultLanguages={
      --            afgh="russian",
      --            mafr="afrikaans",
      --          }
      --          local locationName=InfUtil.GetLocationName()
      --          local langType=hostageInfo.langType or defaultLanguages[locationName] or "english"
      --          local isFemale=GameObject.SendCommand(gameId,{id="isFemale"})
      --          if isFemale then
      --            langType="english"
      --          end
      local langType="english"
      GameObject.SendCommand(hostageId,{id="SetLangType",langType=langType})


      --      local hostagePos=Vector3(vars.playerPosX,vars.playerPosY,vars.playerPosZ)
      --          local hostagePos=Vector3(2,1,4)
      --
      --      local command={id="Warp",degRotationY=vars.playerRotY,position=hostagePos)}
      --      GameObject.SendCommand(hostageId,command)-
    end
  end

  local jeepsWithSeats={}

  local enemyTable=missionTable.enemy
  local soldierDefine=enemyTable.soldierDefine
  local patrolVehicleInfo=InfVehicle.inf_patrolVehicleInfo
  for cpName,cpDefine in pairs(soldierDefine)do
    local vehicleName=cpDefine.lrrpVehicle
    if vehicleName then
      if InfVehicle.inf_patrolVehicleInfo then
        local vehicleDef=patrolVehicleInfo[vehicleName]
        if vehicleDef then
          if vehicleDef.baseType=="LIGHT_VEHICLE" then--jeep
            --            InfCore.Log("InfHostage.SetupEnemy found jeep")--DEBUG
            --            InfCore.PrintInspect(cpDefine)--DEBUG
            local numSeats=InfNPC.GetNumSeats(vehicleName)

            if #cpDefine<numSeats then
              jeepsWithSeats[#jeepsWithSeats+1]=vehicleName
            end
          end
        end
      end
    end
  end

  if this.debugModule then
    InfCore.PrintInspect(jeepsWithSeats,{varName="jeepsWithSeats"})
  end

  for i,hostageName in ipairs(this.hostageNames)do
    if #jeepsWithSeats==0 then
      break
    end

    local hostageId=GetGameObjectId(hostageName)
    if hostageId==NULL_ID then
    else
      local vehicleName=InfUtil.GetRandomPool(jeepsWithSeats)
      if vehicleName==nil then
      else
        InfCore.Log("InfHostage.SetupEnemy: Adding "..hostageName.." to "..vehicleName)

        local vehicleId=GetGameObjectId(vehicleName)

        --TppEnemy.RegistHoldRecoveredState(vehicleName)

        local command={
          id="SetHostage2Flag",
          flag="unlocked",
          on=true,
        }
        SendCommand(hostageId,command)

        local vehiclePos=SendCommand(vehicleId,{id="GetPosition"})
        --InfCore.Log(vehiclePos:GetX()..","..vehiclePos:GetY()..","..vehiclePos:GetZ())--DEBUG

        local vehiclePos=Vector3(vehiclePos:GetX(),vehiclePos:GetY()+2,vehiclePos:GetZ())
        local command={id="Warp",position=vehiclePos,degRotationY=0}
        SendCommand(hostageId,command)
        --tex TODO no go for some reason, think it requires route
        local setVehicle={id="SetRelativeVehicle",targetId=vehicleId,rideFromBeginning=true}
        --SendCommand(hostageId,setVehicle)
      end
    end
  end

  InfMain.RandomResetToOsTime()
end

function this.DEBUG_WarpHostagesToPlayerPos()--
  local hostageNames={
    --"hos_quest_0000",
    "ih_hostage_0000",
    "ih_hostage_0001",
    "ih_hostage_0002",
    "ih_hostage_0003",
  }

for i,hostageName in ipairs(hostageNames)do
  local hostageObject=GetGameObjectId(hostageName)

  if hostageObject==NULL_ID then
    InfCore.Log(hostageName.."==NULL_ID",true)
  else
    local playerPos=Vector3(vars.playerPosX,vars.playerPosY,vars.playerPosZ)
    local command={id="Warp",degRotationY=vars.playerRotY,position=playerPos}
    GameObject.SendCommand(hostageObject,command)
  end
end
end

function this.DEBUG_SomeHostageShiz()
  local hostageNames={
    --"hos_quest_0000",
    "ih_hostage_0000",
    "ih_hostage_0001",
    "ih_hostage_0002",
    "ih_hostage_0003",
  }
  for i,hostageName in ipairs(hostageNames)do
    local hostageId=GetGameObjectId(hostageName)


    TppEnemy.RegistHoldRecoveredState(hostageName)


    local command={
      id="SetHostage2Flag",
      flag="unlocked",
      on=true,
    }
    SendCommand(hostageId,command)
    --
    --                 TppHostage2.SetHostageType{
    --      gameObjectType  = "TppHostage2",
    --      hostageType   = "Mob",
    --    }


    --     GameObject.SendCommand( hostageId, { id = "SetFollowed", enable = true } )
    --     local command={id="SetHostage2Flag",flag="commonNpc",on=true}
    --     GameObject.SendCommand( hostageId,command)

    local command = { id = "SetNoticeState", state = TppGameObject.HOSTAGE_NOTICE_STATE_FLEE }
    SendCommand(hostageId,command)


    local vehicleId=GetGameObjectId("veh_lv_0002")
    local setVehicle={id="SetRelativeVehicle",targetId=vehicleId,rideFromBeginning=true}
    SendCommand(hostageId,setVehicle)
  end
end

this.mobListTable = {
  doctorAndNurseList = {
    "awake_doctor",
    "dct_p21_010410_0000",
    "dct_p21_010410_0001",
    "awake_nurse",
    "nrs_p21_010360_0000",
    "nrs_p21_010410_0000",
    "nrs_p21_010410_0001",
    "nrs_p21_010410_0002",
  },
  patientList = {
    "ptn_p21_010340_0000",
    "ptn_p21_010340_0001",
    "ptn_p21_010360_0000",
    "ptn_p21_010370_0000",
    "ptn_p21_010380_0000",
    "ish_p21_010410_0000",
    "ptn_p21_010410_0000",
    "ptn_p21_010410_0001",
    "ptn_p21_010410_0002",
    "ptn_p21_010410_0003",
    "ptn_p21_010410_0004",
    "ptn_p21_010410_0005",
    "ptn_p21_010410_0006",
    "ptn_p21_010410_0007",
    "ptn_p21_010410_0008",
    "ptn_p21_010410_0009",
    "ptn_p21_010410_0010",
    "ptn_p21_010410_0011",
    "ptn_p21_010410_0012",
    "ptn_p21_010420_0000",
    "ptn_p21_010420_0001",
    "ptn_p21_010420_0002",
    "ptn_p21_010420_0003",
    "ptn_p21_010420_0004",
    "ptn_p21_010500_0000",
    "ptn_p21_010500_0001",
    "ptn_p21_010500_0002",
    "ptn_p21_010500_0003",
  }
}

this.mobFovaTable = {
  dct_p21_010410_0000 = { bodyId = 348, },
  dct_p21_010410_0001 = { bodyId = 349, },
  nrs_p21_010360_0000 = { bodyId = 340, },
  nrs_p21_010410_0000 = { bodyId = 341, },
  nrs_p21_010410_0001 = { bodyId = 342, },
  nrs_p21_010410_0002 = { bodyId = 344, },
  ptn_p21_010340_0000 = { bodyId = 333, faceId = 636, },
  ptn_p21_010340_0001 = { bodyId = 334, },
  ptn_p21_010360_0000 = { bodyId = 303, },
  ptn_p21_010370_0000 = { bodyId = 304, },
  ptn_p21_010380_0000 = { bodyId = 307, },
  ptn_p21_010410_0000 = { bodyId = 305, },
  ptn_p21_010410_0001 = { bodyId = 306, },
  ptn_p21_010410_0002 = { bodyId = 318, },
  ptn_p21_010410_0003 = { bodyId = 309, },
  ptn_p21_010410_0004 = { bodyId = 323, },
  ptn_p21_010410_0005 = { bodyId = 311, },
  ptn_p21_010410_0006 = { bodyId = 312, },
  ptn_p21_010410_0007 = { bodyId = 313, },
  ptn_p21_010410_0008 = { bodyId = 314, },
  ptn_p21_010410_0009 = { bodyId = 315, },
  ptn_p21_010410_0010 = { bodyId = 316, },
  ptn_p21_010410_0011 = { bodyId = 317, },
  ptn_p21_010410_0012 = { bodyId = 326, },
  ptn_p21_010420_0000 = { bodyId = 310, },
  ptn_p21_010420_0001 = { bodyId = 325, },
  ptn_p21_010420_0002 = { bodyId = 308, },
  ptn_p21_010420_0003 = { bodyId = 322, },
  ptn_p21_010420_0004 = { bodyId = 324, },
  ptn_p21_010500_0000 = { bodyId = 319, },
  ptn_p21_010500_0001 = { bodyId = 320, },
  ptn_p21_010500_0002 = { bodyId = 321, },
  ptn_p21_010500_0003 = { bodyId = 327, },
}

this.motionTable={
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0000",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_a_idl.gani",
    specialActionName = "end_of_ptn0_guilty_a_idl",
    position = Vector3( -101.977997, 102.175000, -1674.468872 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0001",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_b_idl.gani",
    specialActionName = "end_of_ptn0_guilty_b_idl",
    position = Vector3( -102.622482, 102.175000, -1673.884888 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0002",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_c_idl.gani",
    specialActionName = "end_of_ptn0_guilty_c_idl",
    position = Vector3( -101.045341, 102.175000, -1673.582031 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0003",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_d_idl.gani",
    specialActionName = "end_of_ptn0_guilty_d_idl",
    position = Vector3( -102.250633, 102.175000, -1672.571777 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0004",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_e_idl.gani",
    specialActionName = "end_of_ptn0_guilty_e_idl",
    position = Vector3( -102.816933, 102.175000, -1672.175659 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0005",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_f_idl.gani",
    specialActionName = "end_of_ptn0_guilty_f_idl",
    position = Vector3( -101.705223, 102.175000, -1671.819214 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0006",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_g_idl.gani",
    specialActionName = "end_of_ptn0_guilty_g_idl",
    position = Vector3( -102.224541, 102.175000, -1670.964722 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0007",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_h_idl.gani",
    specialActionName = "end_of_ptn0_guilty_h_idl",
    position = Vector3( -102.783768, 102.175000, -1670.304199 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0008",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_i_idl.gani",
    specialActionName = "end_of_ptn0_guilty_i_idl",
    position = Vector3( -100.855095, 102.175000, -1670.159424 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0009",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_j_idl.gani",
    specialActionName = "end_of_ptn0_guilty_j_idl",
    position = Vector3( -101.246498, 102.175000, -1669.561157 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0010",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_k_idl.gani",
    specialActionName = "end_of_ptn0_guilty_k_idl",
    position = Vector3( -102.361778, 102.175000, -1668.384033 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0011",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_l_idl.gani",
    specialActionName = "end_of_ptn0_guilty_l_idl",
    position = Vector3( -101.045410, 102.175000, -1667.730957 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010410_0012",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_m_idl.gani",
    specialActionName = "end_of_ptn0_guilty_m_idl",
    position = Vector3( -102.322762, 102.175000, -1667.145996 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ish_p21_010410_0000",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_guilty_ish_idl.gani",
    specialActionName = "end_of_ptn0_guilty_ish_idl",
    idle = true,
    position = Vector3( -101.702194, 102.175000, -1667.854004 ),
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "nrs_p21_010410_0000",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/nrs0/nrs0/nrs0_guilty_a_idl.gani",
    specialActionName = "end_of_nrs0_guilty_a_idl",
    position = Vector3( -101.848816, 102.175000, -1673.265869 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "nrs_p21_010410_0001",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/nrs0/nrs0/nrs0_guilty_b_idl.gani",
    specialActionName = "end_of_nrs0_guilty_b_idl",
    position = Vector3( -102.133018, 102.175000, -1669.248657 ),
    idle = true,
    again = true,
  },

  ------lying down
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010420_0000",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_cutn_01_idl.gani",
    specialActionName = "end_of_ptn0_cutn_01_idl",
    position = Vector3( -104.8328, 102.9841, -1660.197 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010420_0001",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_cutn_02_idl.gani",
    specialActionName = "end_of_ptn0_cutn_02_idl",
    position = Vector3( -104.8194,102.9841,-1664.037 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010420_0002",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_cutn_03_idl.gani",
    specialActionName = "end_of_ptn0_cutn_03_idl",
    position = Vector3( -110.7841,102.9841,-1663.856 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010420_0003",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_cutn_01_idl.gani",
    specialActionName = "end_of_ptn0_cutn_01_idl",
    position = Vector3( -104.7958,102.9841,-1667.789 ),
    idle = true,
    again = true,
  },
  {
    --func = s10010_sequence.PushMotionOnSubEvent,
    locatorName = "ptn_p21_010420_0004",
    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/ptn0/ptn0/ptn0_cutn_02_idl.gani",
    specialActionName = "end_of_ptn0_cutn_02_idl",
    position = Vector3( -110.8451,102.9841,-1667.285 ),
    idle = true,
    again = true,
  },
}

--  {
--    --func = s10010_sequence.PushMotionOnSubEvent,
--    locatorName = "nrs_p21_010410_0002",
--    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/nrs0/nrs0/nrs0_guilty_c_idl.gani",
--    specialActionName = "end_of_nrs0_guilty_c_idl",
--    position = Vector3( -101.315948, 102.175000, -1667.002808 ),
--    idle = true,
--    again = true,
--  },
--  {
--    --func = s10010_sequence.PushMotionOnSubEvent,
--    locatorName = "dct_p21_010410_0000",
--    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/dct0/dct0/dct0_guilty_a_idl.gani",
--    specialActionName = "end_of_dct0_guilty_a_idl",
--    position = Vector3( -102.240601, 102.175000, -1675.260986 ),
--    idle = true,
--    again = true,
--  },
--  {
--    --func = s10010_sequence.PushMotionOnSubEvent,
--    locatorName = "dct_p21_010410_0001",
--    motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/dct0/dct0/dct0_guilty_b_idl.gani",
--    specialActionName = "end_of_dct0_guilty_b_idl",
--    position = Vector3( -101.243515, 102.175000, -1668.491943 ),
--    idle = true,
--    again = true,
--  },

--  [ StrCode32( "end_of_dct0_guilty_a_come_1" ) ] = {
--    {
--      locatorName = "dct_p21_010410_0000",
--      motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/dct0/dct0/dct0_guilty_a_idl.gani",
--      specialActionName = "end_of_dct0_guilty_a_idl",
--      idle = true,
--      again = true,
--    },
--  },
--  [ StrCode32( "end_of_dct0_guilty_a_come_2" ) ] = {
--    {
--      locatorName = "dct_p21_010410_0000",
--      motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/dct0/dct0/dct0_guilty_a_idl.gani",
--      specialActionName = "end_of_dct0_guilty_a_idl",
--      idle = true,
--      again = true,
--    },
--  },

--    s10010_sequence.PushMotion{
--      locatorName = "awake_doctor",
--      motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/dct0/dct0/dct0_tuto_idl.gani",
--      specialActionName = "end_of_dct0_tuto_idl",
--    }
--    s10010_sequence.PushMotion{
--      locatorName = "awake_nurse",
--      motionPath = "/Assets/tpp/motion/SI_game/fani/bodies/nrs0/nrs0/nrs0_tuto_idl.gani",
--      specialActionName = "end_of_nrs0_tuto_idl",
--    }

this.PushMotion = function( motionTable )

  Fox.Log( "s10010_sequence.PushMotion(): motionTable:" .. tostring( motionTable ) )

  if not mvars.motionPlayed then
    mvars.motionPlayed = {}
  end

  if motionTable.specialActionName and not motionTable.again then
    if not mvars.motionPlayed[ motionTable.specialActionName ] then
      mvars.motionPlayed[ motionTable.specialActionName ] = true
    else
      return
    end
  end

  if motionTable.locatorName and ( motionTable.motionPath or motionTable.state ) then

    if not mvars.motionList then
      mvars.motionList = {}
    end
    if not mvars.motionList[ motionTable.locatorName ] then
      mvars.motionList[ motionTable.locatorName ] = {}
    end


    if motionTable.override then
      mvars.motionPlaying[ motionTable.locatorName ] = nil
      mvars.motionList[ motionTable.locatorName ] = nil
      this.PlayMotion( motionTable )
    elseif not mvars.motionPlaying[ motionTable.locatorName ] and not next( mvars.motionList[ motionTable.locatorName ] ) then
      this.PlayMotion( motionTable )
    else

      table.insert( mvars.motionList[ motionTable.locatorName ], motionTable )
    end

  else
    Fox.Log( "s10010_sequence.PushMotion(): locatorName or motionPath is not defined." )
  end

end

this.PlayMotion = function( inMotionTable )

  Fox.Log( "s10010_sequence.PlayMotion(): locatorName:" .. tostring( inMotionTable.locatorName ) .. ", motionPath:" .. tostring( inMotionTable.motionPath ) ..
    ", specialActionName:" .. tostring( inMotionTable.specialActionName ) .. ", position:" .. tostring( inMotionTable.position ) .. ", rotationY:" ..
    tostring( inMotionTable.rotationY ) .. ", idle:" .. tostring( inMotionTable.idle ) .. ", enableGunFire:" .. tostring( inMotionTable.enableGunFire ) )

  local motionTable = inMotionTable
  if not motionTable or not motionTable.locatorName then
    Fox.Error( "s10010_sequence.PlayMotion(): inMotionTable or inMotionTable.locatorName is nil! This function cannot continue operation!" )
    return
  end


  if not motionTable.motionPath and not motionTable.state then
    if mvars.motionList and mvars.motionList[ motionTable.locatorName ] and mvars.motionList[ motionTable.locatorName ][ 1 ] then
      motionTable = mvars.motionList[ motionTable.locatorName ][ 1 ]
      table.remove( mvars.motionList[ motionTable.locatorName ], 1 )
    else
      Fox.Log( "s10010_sequence.PlayMotion(): ignore operation because there is no motionTable." )
      return
    end
  end



  local locatorName = motionTable.locatorName
  local motionPath = motionTable.motionPath
  local specialActionName = motionTable.specialActionName
  local position = motionTable.position
  local rotationY = motionTable.rotationY
  local idle = motionTable.idle
  local enableGunFire = motionTable.enableGunFire
  local OnStart = motionTable.OnStart
  local action = motionTable.actioin
  if not action then
    action = "PlayMotion"
  end
  local state = motionTable.state
  local enableAim = motionTable.enableAim
  local charaControl = motionTable.charaControl
  local startPos = motionTable.startPos
  local startRot = motionTable.startRot
  local interpFrame = motionTable.interpFrame
  local enableCollision = motionTable.enableCollision or false
  local enableSubCollision = motionTable.enableSubCollision or false
  local enableGravity = motionTable.enableGravity or false
  local enableCurtain = motionTable.enableCurtain

  local gameObjectId = GameObject.GetGameObjectId( locatorName )

  local autoFinish = false

  if position or rotationY then
    if gameObjectId ~= GameObject.NULL_ID then
      GameObject.SendCommand( gameObjectId, { id = "Warp", degRotationY = rotationY, position = position, demoEnd = true, interpTime = 0.1, control = charaControl, } )
    end
  else
    Fox.Log( "s10010_sequence.PlayMotion(): position or rotationY is not defined." )
  end


  if Tpp.IsTypeTable( motionPath ) then
    motionPath = motionPath[ math.random( #motionPath ) ]
    Fox.Log( "s10010_sequence.PlayMotion(): random motionPath:" .. tostring( motionPath ) )
  end

  if gameObjectId ~= GameObject.NULL_ID then
    GameObject.SendCommand( gameObjectId, {
      id = "SpecialAction",
      action = action,
      path = motionPath,
      state = state,
      autoFinish = autoFinish,
      enableMessage = true,
      enableGravity = motionTable.enableGravity,
      enableCollision = enableCollision,
      enableSubCollision = enableSubCollision,
      enableGunFire = enableGunFire,
      enableAim = enableAim,
      startPos = startPos,
      startRot = startRot,
      enableCurtain = enableCurtain,
    } )
  end

  mvars.specialActioinName[ locatorName ] = specialActionName
  if not idle then
    mvars.motionPlaying[ locatorName ] = true
  end


  local voiceIdList = s10010_sequence.monologueMotionTable[ specialActionName ]
  if voiceIdList then
    if not Tpp.IsTypeTable( voiceIdList ) then
      voiceIdList = { voiceIdList }
    end
    for i, voiceId in ipairs( voiceIdList ) do
      GameObject.SendCommand( GameObject.GetGameObjectId( locatorName ), { id = "CallMonologue", label = voiceId, } )
    end
  end


  if OnStart and Tpp.IsTypeFunc( OnStart ) then
    OnStart()
  end

end





this.PushMotionOnSubEvent = function( subEventTable, executed, skipped )
  Fox.Log( "s10010_sequence.PushMotionOnSubEvent(): locatorName:" .. tostring( subEventTable.locatorName ) .. ", motionPath:" ..
    tostring( subEventTable.motionPath ) .. ", specialActionName:" .. tostring( subEventTable.specialActionName ) )

  if executed then
    if not skipped then
      this.PushMotion( subEventTable )
    else
      mvars.initialMotioinTable[ subEventTable.locatorName ] = subEventTable
    end
  end
end

this.EnableMob = function( subEventTable, executed, skipped )
  Fox.Log( "s10010_sequence.EnableMob(): locatorName:" .. tostring( subEventTable.locatorName ) .. ", enable:" .. tostring( subEventTable.enable ) )

  local enable = subEventTable.enable
  if not executed then
    enable = not enable
  end
  this.SetMobEnabled( subEventTable.locatorName, enable )

  if not Tpp.IsTypeTable( mvars.mobEnabled ) then
    mvars.mobEnabled = {}
  end
  mvars.mobEnabled[ subEventTable.locatorName ] = enable
end

this.SetUpMob = function( subEventTable, executed, skipped )
  Fox.Log( "s10010_sequence.SetUpMob(): locatorName:" .. tostring( subEventTable.locatorName ) )

  if executed then
    if not skipped then
      this.SetUpMobFova( subEventTable.locatorName )
    else
      mvars.initialMobFova[ subEventTable.locatorName ] = subEventTable
    end
  end
end



this.SetMobEnabled = function( locatorName, enableMob )
  --  if not this.IsMob( locatorName ) then
  --    Fox.Error( "There is no Mob named " .. tostring( locatorName ) )
  --    return
  --  end



  local isPatient = this.IsPatient( locatorName )
  local identifierId
  if isPatient then
    identifierId = "s10010_s03_other_DataIdentifier"
  else
    identifierId = "s10010_s02_other_DataIdentifier"
  end
  if DataIdentifier.GetDataWithIdentifier( identifierId, identifierId ) == NULL then
    return
  end

  local gameObjectId = GameObject.GetGameObjectId( locatorName )
  if gameObjectId and gameObjectId ~= GameObject.NULL_ID then
    GameObject.SendCommand( gameObjectId, { id = "SetEnabled", enabled = enableMob } )
    if enableMob then
      s10010_enemy.SetUpMobFova( locatorName )
    else
      GameObject.SendCommand( gameObjectId, { id = "SetFaceBloodMode", enabled = false, } )
    end
    GameObject.SendCommand( gameObjectId, { id = "SetDisableDamage", life = true, faint = true, sleep = true, } )
    GameObject.SendCommand( gameObjectId, { id = "SetHostage2Flag", flag = "disableDamageReaction", on = true, } )
  else
    Fox.Log( "s10010_enemy.SetMobEnabled(): There is no such gameObject. gameObjectId:" .. tostring( gameObjectId ) )
  end

end

this.SetUpMobFova = function( locatorName )
  local gameObjectId = GameObject.GetGameObjectId( locatorName )
  if gameObjectId and gameObjectId ~= GameObject.NULL_ID then
    Fox.Log( "s10010_enemy.SetUpMobFova(): gameObjectId:" .. tostring( gameObjectId ) )
    local fovaTable = this.mobFovaTable[ locatorName ]
    if fovaTable then
      local faceId = fovaTable.faceId
      local bodyId = fovaTable.bodyId
      if bodyId then
        Fox.Log( "s10010_enemy.SetUpMobFova(): bodyId:" .. tostring( bodyId ) )
        GameObject.SendCommand( gameObjectId, { id = "ChangeFova", faceId = faceId, bodyId = bodyId, } )
      else
        Fox.Log( "s10010_enemy.SetUpMobFova(): bodyId is invalid." )
      end
    end
  else
    Fox.Log( "s10010_enemy.SetUpMobFova(): gameObjectId is invalid." )
  end

end

return this
